{"version":3,"sources":["utilities/Navbar.js","features/Book/BookSlice.js","utilities/Helper.js","features/cart/CartSlice.js","features/Book/Book.js","utilities/Selector.js","features/Book/BookList.js","features/cart/CartItem.js","features/cart/Cart.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["Navbar","toggle","state","useSelector","cart","className","to","onClick","ShoppingCart","cartList","length","FetchBooks","createAsyncThunk","payload","a","rejectWith","getState","dipatch","axios","get","books","data","BookSlice","createSlice","name","initialState","bookList","genreList","loading","reducers","resetStock","action","bookIds","console","log","map","bookId","bookIndex","findIndex","item","book","id","count","stock","decreaseStock","newCartItem","extraReducers","pending","fulfilled","push","genre","includes","split","g","saveToRedux","rejected","actions","convertDollar","dollar","replace","trim","toFixed","formatDate","date","arr","formatPrice","price","toString","CartSlice","addToCart","cartIndex","alert","parseInt","removeFromCart","tempList","filter","Book","dispatch","useDispatch","useState","setCart","src","image","alt","style","aspectRatio","published_date","author","type","value","min","max","onChange","e","target","isNaN","cartCount","cartObj","disabled","Selector","setFilter","handleChange","BookList","filterKey","setFilterKey","useEffect","role","width","CartItem","remove","changeStock","val","position","right","top","height","Cart","toggleCart","totalCost","calculateTotal","window","confirm","idList","App","cartVisible","setCartVisible","store","configureStore","reducer","BookReducer","CartReducer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.06c79863.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { ShoppingCart } from '@mui/icons-material'\nimport { useSelector } from 'react-redux'\n\nconst Navbar = ({ toggle }) => {\n  const state = useSelector(state => state.cart)\n  return (\n    <nav className=\"fixed-top navbar bg-white ps-4 pe-4 border\">\n      <span className=\"textBlue h3 fw-bolder\" to=\"/\">Book Market</span>\n\n      <div className=\"navbar-nav ms-auto\">\n        <a className=\"nav-item nav-link active\" to=\"/cart\" onClick={toggle}>\n          <ShoppingCart className=\"textBlue\" />\n\n          {state.cartList.length !== 0 && (\n            <span className=\"position-absolute top-2 start-2 translate-middle badge rounded-pill bg-danger\">\n              {state.cartList.length}\n            </span>\n          )}\n        </a>\n      </div>\n\n    </nav>\n  )\n}\n\nexport default Navbar\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport axios from 'axios'\n\nexport const FetchBooks = createAsyncThunk(\n  'get/book',\n  async (payload, { rejectWith, getState, dipatch }) => {\n    try {\n      let url = \"https://book-set-task.herokuapp.com/api/list_books\"\n      const books = await axios.get(url)\n      const { data } = books\n      return data\n    } catch (error) {\n      return error\n    }\n  }\n)\n\nconst saveToRedux = (state, action) => {\n  if (state.bookList.length > 0) {\n    return\n  }\n  let bookList = action.payload\n\n  bookList.map(book => {\n    state.bookList.push({\n      'book': book,\n      'count': book.stock\n    })\n    if (book.genre.includes('|')) {\n      let genres = book.genre.split('|')\n      genres.map(g => {\n        if (!state.genreList.includes(g)) {\n          state.genreList.push(g)\n        }\n        return g\n      })\n\n    } else if (!state.genreList.includes(book.genre)) {\n      state.genreList.push(book.genre)\n    }\n    return book\n  })\n}\n\nconst initialState = {\n  bookList: [],\n  genreList: [],\n  loading: false\n}\n\nconst BookSlice = createSlice({\n  name: 'books',\n  initialState,\n  reducers: {\n    resetStock: (state, action) => {\n      const bookIds = action.payload\n      console.log('removed ', bookIds.length, 'book(s) from cart');\n      bookIds.map(bookId => {\n        const bookIndex = state.bookList.findIndex(item => item.book.id === bookId)\n        if (bookIndex !== -1) {\n          state.bookList[bookIndex].count = state.bookList[bookIndex].book.stock\n        }\n        return bookId\n      });\n\n    },\n    decreaseStock: (state, action) => {\n      const newCartItem = action.payload\n      const bookIndex = state.bookList.findIndex(item =>\n        item.book.id === newCartItem.book.id)\n      if (bookIndex >= 0) {\n        state.bookList[bookIndex].count -= newCartItem.count\n      }\n    },\n  },\n  extraReducers: {\n    [FetchBooks.pending]: (state) => {\n      state.loading = true;\n    },\n    [FetchBooks.fulfilled]: (state, action) => {\n      saveToRedux(state, action)\n      state.loading = false;\n    },\n    [FetchBooks.rejected]: (state) => {\n      state.loading = false;\n    },\n  }\n})\n\nexport const { resetStock, decreaseStock } = BookSlice.actions\n\nexport default BookSlice.reducer;\n","// Helper class for utility functions...\n\nexport const convertDollar = (dollar) => {\n  let priceInDollar = dollar.replace('$', '').trim()\n  let priceInNpr = priceInDollar * 117.63;\n  return (priceInNpr.toFixed(0));\n}\n\nexport const getYearFromDate = (date) => {\n  return date.split(\"/\")[0]\n}\n\nexport const formatDate = (date) => {\n  let arr = date.split(\"/\")\n  return `${arr[2]}-${arr[1]}-${arr[0]}`\n}\n\nexport const formatPrice = (price) => {\n  return price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\n\n","import { createSlice } from '@reduxjs/toolkit'\n\n\nconst initialState = {\n  cartList: [],\n}\n\nconst CartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      const newCartItem = action.payload\n      const cartIndex = state.cartList.findIndex(item => item.book.id === newCartItem.book.id)\n      if (cartIndex < 0) {\n        if (state.cartList.length < 5) {\n          state.cartList.push(newCartItem)\n        }\n        else {\n          alert('Cannot add more than 5 different books!')\n        }\n      } else {\n        state.cartList[cartIndex].count += parseInt(newCartItem.count)\n      }\n\n    },\n    removeFromCart: (state, action) => {\n      const tempList = state.cartList.filter(item => !action.payload.includes(item.book.id))\n      state.cartList = tempList\n    }\n  },\n})\n\nexport const { addToCart, removeFromCart } = CartSlice.actions\n\nexport default CartSlice.reducer;\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { ShoppingCart } from '@mui/icons-material'\nimport { convertDollar, getYearFromDate, formatDate, formatPrice } from '../../utilities/Helper'\nimport { addToCart } from '../cart/CartSlice'\nimport { decreaseStock } from './BookSlice'\n\nconst Book = ({ book, count }) => {\n  const dispatch = useDispatch()\n  const [cart, setCart] = useState('1')\n\n  const add = () => {\n    if (isNaN(parseInt(cart))) {\n      alert('Quantity must be a Number!')\n      return\n    }\n    let cartCount = parseInt(cart)\n    if (cartCount > count) {\n      alert('Selected Quantity is greater than stock quantity!')\n      return\n    }\n\n    const cartObj = {\n      'book': book,\n      'count': cartCount,\n    }\n\n    dispatch(addToCart(cartObj))\n    dispatch(decreaseStock(cartObj))\n\n    setCart(1)\n  }\n\n  return (\n    <div className=\"col-sm-12 col-md-6 col-lg-3 m-auto p-2\">\n      <div className=\"card shadow-sm \">\n\n        <img src={book.image} alt=\"\" className=\"card-img-top\" style={{ aspectRatio: \"2/1\" }} />\n        <div className=\"card-body\">\n\n          <h5 className=\"card-title text-center\">{book.name} ({getYearFromDate(book.published_date)})</h5>\n          <p className=\"h6 text-success text-center mt-auto mb-auto\"> Rs.{formatPrice(convertDollar(book.price))}</p>\n          <div className=\"card-text fw-light mt-2\">\n            Author: {book.author}<br />\n            <div className=\"d-flex\">\n              <span >Genre: </span>\n              <span className=\"text-truncate ms-2\"> {book.genre} </span><br />\n            </div>\n            Stock: {count}<br />\n            <span className=\"text-truncate\" >Published on: {formatDate(book.published_date)} </span><br />\n          </div>\n          <div className=\"d-flex mt-2\">\n            <span className=\"fw-light mt-auto mb-auto\">Qty: </span>\n            <div className=\"ms-1\">\n              <input type=\"number\" className=\"form-control text-center align-middle\"\n                value={cart} min=\"1\" max={count}\n                onChange={e => setCart(e.target.value.trim())}\n              /></div>\n            <button className=\"btn btn-smbtn-primary ms-auto bgBlue text-light\"\n              onClick={add} disabled={count === 0}><ShoppingCart /></button>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Book\n","import * as React from 'react';\n\nconst Selector = ({ genreList, setFilter }) => {\n\n  const handleChange = (e) => {\n    let genre = e.target.value\n    setFilter(genre);\n  };\n\n  return (\n    <div className=\"col-lg-4 col-md-6 col-xs-10 my-4\">\n      <select className=\"form-select textBlue\" aria-label=\"Select Genre\"\n        onChange={e => handleChange(e)}>\n        <option value=\"\">Select Genre</option>\n        {\n          genreList.map(g =>\n            <option value={g} key={g} >{g}</option>\n          )\n        }\n      </select>\n    </div>\n  );\n}\n\nexport default Selector\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { FetchBooks } from './BookSlice'\nimport Book from './Book'\nimport Selector from '../../utilities/Selector'\n\nconst BookList = () => {\n\n  const [filterKey, setFilterKey] = useState('')\n\n  const dispatch = useDispatch()\n  const state = useSelector(state => state.books)\n\n  useEffect(() => {\n    if (state.bookList.length === 0) {\n      dispatch(FetchBooks())\n    }\n  })\n\n  if (state.loading) {\n    return (\n      <div className=\"container pt-4\">\n\n        {\n          state.loading && (\n            <div className=\"progress mt-4\">\n              <div className=\"progress-bar progress-bar-striped progress-bar-animated bg-success\" role=\"progressbar\" style={{ width: \"100%\" }}></div>\n            </div>\n          )\n        }\n      </div>\n    )\n  } else {\n\n    return (\n      <div className=\"p-4 mx-4\">\n\n        {\n          state.genreList.length !== 0 && (\n            <Selector genreList={state.genreList} setFilter={setFilterKey} />\n          )\n        }\n\n        {\n          filterKey !== '' &&\n          <div className=\"row\">\n            {\n              state.bookList.filter(item => item.book.genre.includes(filterKey)).map(item => (\n                <Book key={item.book.id} book={item.book} count={item.count} />\n              ))\n            }\n          </div>\n        }\n\n        {\n          filterKey === '' &&\n          <div className=\"row\">\n            {\n              state.bookList.map(item => (\n                <Book key={item.book.id} book={item.book} count={item.count} />\n              ))\n            }\n          </div>\n        }\n\n      </div>\n    )\n  }\n}\n\nexport default BookList\n","import { DeleteForeverOutlined } from '@mui/icons-material'\nimport { useDispatch } from 'react-redux'\nimport { convertDollar, formatPrice, getYearFromDate } from '../../utilities/Helper'\nimport { removeFromCart, addToCart } from './CartSlice'\nimport { resetStock, decreaseStock } from '../Book/BookSlice'\n\n\nconst CartItem = ({ book, count }) => {\n  const dispatch = useDispatch()\n\n  const remove = () => {\n    dispatch(removeFromCart([book.id]))\n    dispatch(resetStock([book.id]))\n  }\n\n  const changeStock = (val) => {\n    if ((count + val) === 0) {\n      remove()\n      return\n    }\n    if (count + val > book.stock) {\n      alert('Book out of stock!')\n      return\n    }\n    const cartObj = {\n      'book': book,\n      'count': val,\n    }\n\n    dispatch(addToCart(cartObj))\n    dispatch(decreaseStock(cartObj))\n  }\n\n  return (\n    <div style={{ position: 'relative', }}>\n      <i className=\"fas fs-2 fa-times-circle text-danger\"\n        style={{\n          position: 'absolute',\n          right: '0px',\n          top: '-8px'\n        }}\n        onClick={remove} />\n\n      <div className=\"row bg-white rounded-3 mx-2 my-4\">\n        <div className=\"cartImgContainer col-md-3 col-sm-12\">\n          <img src={book.image} className=\"cartImg rounded-circle\" />\n        </div>\n\n        <div className=\"col-md-6 col-sm-12\">\n          <ul className=\"list-group list-group-flush px-2\">\n            <li className=\"list-group-item h4\">{book.name}</li>\n            <li className=\"list-group-item\">Price: Rs.{formatPrice(convertDollar(book.price))}</li>\n            <li className=\"list-group-item\">\n              <span>Quantity:</span>\n              <div className=\"d-flex mt-2\">\n                <button className=\"btn btn-sm btn-outline-dark rounded-circle\"\n                  style={{ width: '2rem', height: '2rem' }}\n                  onClick={() => changeStock(-1)}>-</button>\n                <span className=\"h4 mx-4\">{count}</span>\n                <button className=\"btn btn-sm btn-outline-dark rounded-circle me-auto\"\n                  style={{ width: '2rem', height: '2rem' }}\n                  disabled={count + 1 > book.stock}\n                  onClick={() => changeStock(1)}>+</button>\n              </div>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"col-md-3 col-sm-12 d-flex bg-light rounded p-2\">\n          <p className=\"m-auto p-2 text-center text-secondary align-middle\">\n            <u>Subtotal</u><br />\n            <span className=\"h5 text-success\">\n              Rs.{formatPrice(convertDollar(book.price) * count)}\n            </span>\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CartItem\n\n/* <div className=\"col-sm-11 col-md-6 p-3\" style={{ color: '#212121' }}>\n      <div className=\"card shadow-sm \">\n\n        <img src={book.image} alt=\"\" className=\"card-img-top\" style={{ aspectRatio: \"2/1\" }} />\n        <div className=\"card-body\">\n\n          <h5 className=\"card-title text-center\">{book.name} ({getYearFromDate(book.published_date)})</h5>\n          <p className=\"text-success text-center my-auto\"> Rs.{formatPrice(convertDollar(book.price))}</p>\n          <div className=\"card-text fw-light mt-2\">\n            Author: {book.author}<br />\n            <div className=\"d-flex\">\n              <span >Genre: </span>\n              <span className=\"text-truncate ms-2\"> {book.genre} </span><br />\n            </div>\n            <div className=\"d-flex align-middle my-2\">\n              <span className=\"my-auto me-auto\">In Cart: <span className=\"mx-2 text-primary blockquote\">{count}</span></span>\n              <button className=\"btn btn-sm btn-outline-danger me-2 rounded-circle\"\n                style={{ width: '2rem', height: '2rem' }}\n                onClick={() => changeStock(-1)}>-</button>\n              <button className=\"btn btn-sm btn-outline-success rounded-circle\"\n                style={{ width: '2rem', height: '2rem' }}\n                disabled={count + 1 > book.stock}\n                onClick={() => changeStock(1)}>+</button>\n            </div>\n            Subtotal: <span className=\"text-success\"> Rs.{formatPrice(convertDollar(book.price) * count)}</span>\n          </div>\n          <button className=\"btn btn-outline-danger col-12 mt-2\"\n            onClick={remove}>Remove <DeleteForeverOutlined /> </button>\n        </div>\n      </div>\n    </div>\n    */\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { convertDollar, formatPrice } from '../../utilities/Helper'\nimport { resetStock } from '../Book/BookSlice'\nimport CartItem from './CartItem'\nimport { removeFromCart } from './CartSlice'\n\nconst Cart = ({ toggleCart }) => {\n  const dispatch = useDispatch()\n  const state = useSelector(state => state.cart)\n\n  const calculateTotal = (cartList) => {\n    let totalCost = 0\n    cartList.map(item => {\n      let price = item.book.price.replace('$', '')\n      totalCost += price * item.count\n      return item\n    })\n    return convertDollar('$' + totalCost)\n  }\n\n  const clearCart = () => {\n    if (window.confirm('Do you want to clear cart?')) {\n\n      let idList = []\n      state.cartList.map(item => {\n        idList.push(item.book.id)\n        return item\n      })\n      dispatch(removeFromCart(idList))\n      dispatch(resetStock(idList))\n    }\n  }\n\n  return (\n    <div>\n      <div className=\"row text-light text-center px-4\">\n        <i className=\"fas fs-3 fw-light fa-chevron-right col-1 my-auto\"\n          onClick={toggleCart} />\n        <p className=\"col-10 h4 p-2\">Cart</p>\n        <hr />\n\n        <span className=\"fs-5 fw-bold m-auto col-sm-11 col-md-5\"><span className=\"fw-light\">Total amount:</span> Rs. {formatPrice(calculateTotal(state.cartList))}</span>\n\n        <button onClick={clearCart}\n          disabled={state.cartList.length === 0}\n          className=\"btn btn-outline-light col-sm-11 col-md-5\">\n          Clear Cart<i className=\"fas fa-times-circle ms-2\" />\n        </button>\n        <hr className=\"mt-3\" />\n      </div >\n\n\n      {\n        state.cartList.length === 0 ? (\n          <div>\n            <p className=\"h4 text-secondary text-center col-12 mt-5\">\n              <i className=\"fas fs-2 fa-shopping-cart me-2\"></i>\n              Cart Empty!\n            </p>\n          </div>) : (\n          <div className=\"container py-2\">\n            {\n              state.cartList.map(item => (\n                <CartItem key={item.book.id} book={item.book} count={item.count} />\n              ))\n            }\n          </div>\n        )\n      }\n\n    </div>\n  )\n\n}\n\nexport default Cart\n","import React from 'react';\nimport Navbar from './utilities/Navbar'\nimport BookList from './features/Book/BookList'\nimport Cart from './features/cart/Cart'\nimport { useState } from 'react';\n\nfunction App() {\n  const [cartVisible, setCartVisible] = useState(false)\n\n  const toggleCart = () => {\n    setCartVisible(!cartVisible)\n  }\n\n  return (\n    <div className=\"app\">\n      {cartVisible &&\n        <div>\n          <div className=\"blackOverlay\" onClick={toggleCart}></div>\n          <div className=\"cartOverlay\"><Cart toggleCart={toggleCart} /></div>\n        </div>\n      }\n      <Navbar toggle={toggleCart} />\n\n      <div className=\"mt-4\">\n        <div className=\"col-12\"><BookList /></div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport BookReducer from '../features/Book/BookSlice'\nimport CartReducer from '../features/cart/CartSlice';\n\nexport const store = configureStore({\n  reducer: {\n    books: BookReducer,\n    cart: CartReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}